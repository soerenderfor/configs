## This is a sample configuration file. See the nxlog reference manual about the
## configuration options. It should be installed locally and is also available
## online at http://nxlog.org/nxlog-docs/en/nxlog-reference-manual.html

## Please set the ROOT to the folder your nxlog was installed into,
## otherwise it will not start.

define ROOT C:\Program Files\nxlog
#define ROOT C:\Program Files (x86)\nxlog

Moduledir %ROOT%\modules
CacheDir %ROOT%\data
Pidfile %ROOT%\data\nxlog.pid
SpoolDir %ROOT%\data
LogFile %ROOT%\data\nxlog.log

<Extension json>
    Module      xm_json
</Extension>

<Input in_eventlog>
    Module im_msvistalog
    # Prevent endless loop due to 5156 logging nxlog.exe connections
    Exec if ($SourceName == 'Microsoft-Windows-Security-Auditing' and $EventID IN (5156, 5157) and $Application =~ /\\nxlog\.exe$/i) drop();
    # Define Queries
    Query       <QueryList>\
                        <Query Id="0">\
                            <Select Path="Application">*</Select>\
                            <Select Path="System">*</Select>\
                            <Select Path="Security">*</Select>\
                            <Select Path="Setup">*</Select>\
                            <Select Path="Windows PowerShell">*</Select>\
                            <Suppress Path="Security">*[System[(EventID=4689 or EventID=5158 or EventID=5440 or EventID=5444)]]</Suppress> \
                            <Suppress Path="Windows PowerShell">*[System[(EventID=501 or EventID=400 or EventID=600)]]</Suppress> \
                        </Query>\
                    </QueryList> 

    # Filter out by Application
    Exec if ($Application =~ /nxlog\\nxlog.exe/) drop();
    # Filter out by Source and Destination IP   
    Exec if ($SourceAddress =~ /224.0.0.252/) drop();
    Exec if ($SourceAddress =~ /192.168.1.255/) drop();
    Exec if ($SourceAddress =~ /224.0.0.1/) drop();
    Exec if ($SourceAddress =~ /239.255.255.250/) drop();
    Exec if ($DestAddress =~ /224.0.0.22/) drop();
    # Filter out by Command Line    
    Exec if ($CommandLine =~ /"C:\\Program Files \(x86\)\\nxlog\\nxlog.exe" -c "C:\\Program Files \(x86\)\\nxlog\\conf\\nxlog.conf"/) drop();
    # Dropping non-security but often-loud logs for DFS and failed ISATAP issues
    Exec if ($EventID == 4202 or $EventID == 4208 or $EventID == 4302 or $EventID == 4304 or $EventID == 5004) drop();\

    # Workaround for local time so as to standardize to absolute microseconds since epoch
    Exec $EventTime = integer($EventTime);
    # JSON is required because some Windows logs contain new-line characters.
    Exec $Message = to_json();
</Input>

<Input in_vc_logs>
    Module	im_file
    File	'C:\\ProgramData\\VMware\\VMware VirtualCenter\\Logs\\vpxd*.log'
    SavePos	TRUE
	Exec	$message = $raw_event;
	Exec	$hostname = hostname_fqdn();
	Exec	$filename = file_name();
</Input>

<Output out_vc_logs>
    Module      om_udp
    Host        192.168.1.158
    Port        1514
	Exec		to_json();
</Output>

<Output out_eventlog>
    Module      om_udp
    Host        192.168.1.158
    Port        1515
	Exec		to_json();
</Output>

<Route vc_logs>
    Path        in_vc_logs => out_vc_logs
</Route>

<Route eventlog>
    Path        in_eventlog => out_eventlog
</Route>